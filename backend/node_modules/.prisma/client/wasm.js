
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  roleId: 'roleId',
  managerId: 'managerId',
  companyId: 'companyId'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  currency: 'currency'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  currency: 'currency',
  convertedAmt: 'convertedAmt',
  category: 'category',
  description: 'description',
  date: 'date',
  receiptUrl: 'receiptUrl',
  employeeId: 'employeeId',
  status: 'status'
};

exports.Prisma.ApprovalFlowScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  name: 'name'
};

exports.Prisma.ApprovalStepScalarFieldEnum = {
  id: 'id',
  flowId: 'flowId',
  sequence: 'sequence',
  approverId: 'approverId'
};

exports.Prisma.ApprovalScalarFieldEnum = {
  id: 'id',
  expenseId: 'expenseId',
  approverId: 'approverId',
  decision: 'decision',
  comment: 'comment',
  createdAt: 'createdAt'
};

exports.Prisma.ApprovalRuleScalarFieldEnum = {
  id: 'id',
  flowId: 'flowId',
  percentage: 'percentage',
  mustIncludeId: 'mustIncludeId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ExpenseStatus = exports.$Enums.ExpenseStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.ApprovalDecision = exports.$Enums.ApprovalDecision = {
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  PENDING: 'PENDING'
};

exports.Prisma.ModelName = {
  Role: 'Role',
  User: 'User',
  Company: 'Company',
  Expense: 'Expense',
  ApprovalFlow: 'ApprovalFlow',
  ApprovalStep: 'ApprovalStep',
  Approval: 'Approval',
  ApprovalRule: 'ApprovalRule'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\projects\\hackathon\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\projects\\hackathon\\backend\\src\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../src/prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel Role {\n  id    Int    @id @default(autoincrement())\n  name  String @unique\n  users User[]\n}\n\nmodel User {\n  id       Int    @id @default(autoincrement())\n  name     String\n  email    String @unique\n  password String\n  roleId   Int\n  role     Role   @relation(fields: [roleId], references: [id])\n\n  managerId    Int?\n  manager      User?  @relation(\"UserManager\", fields: [managerId], references: [id])\n  subordinates User[] @relation(\"UserManager\")\n\n  companyId Int\n  company   Company @relation(fields: [companyId], references: [id])\n\n  expenses     Expense[]\n  approvals    Approval[]\n  ApprovalStep ApprovalStep[]\n}\n\nmodel Company {\n  id            Int            @id @default(autoincrement())\n  name          String\n  currency      String\n  users         User[]\n  approvalFlows ApprovalFlow[]\n}\n\nmodel Expense {\n  id           Int      @id @default(autoincrement())\n  amount       Float\n  currency     String\n  convertedAmt Float\n  category     String\n  description  String\n  date         DateTime\n  receiptUrl   String?\n\n  employeeId Int\n  employee   User @relation(fields: [employeeId], references: [id])\n\n  status    ExpenseStatus @default(PENDING)\n  approvals Approval[]\n}\n\nenum ExpenseStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nmodel ApprovalFlow {\n  id        Int     @id @default(autoincrement())\n  companyId Int\n  company   Company @relation(fields: [companyId], references: [id])\n\n  name  String\n  steps ApprovalStep[]\n  rules ApprovalRule?\n}\n\nmodel ApprovalStep {\n  id     Int          @id @default(autoincrement())\n  flowId Int\n  flow   ApprovalFlow @relation(fields: [flowId], references: [id])\n\n  sequence   Int\n  approverId Int\n  approver   User @relation(fields: [approverId], references: [id])\n}\n\nmodel Approval {\n  id        Int     @id @default(autoincrement())\n  expenseId Int\n  expense   Expense @relation(fields: [expenseId], references: [id])\n\n  approverId Int\n  approver   User @relation(fields: [approverId], references: [id])\n\n  decision  ApprovalDecision\n  comment   String?\n  createdAt DateTime         @default(now())\n}\n\nenum ApprovalDecision {\n  APPROVED\n  REJECTED\n  PENDING\n}\n\nmodel ApprovalRule {\n  id     Int          @id @default(autoincrement())\n  flowId Int          @unique\n  flow   ApprovalFlow @relation(fields: [flowId], references: [id])\n\n  percentage    Int?\n  mustIncludeId Int?\n}\n",
  "inlineSchemaHash": "280d738b951c7de2279114377d7e0e485f56e762fd9eb3552157e5cc9f8d0210",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"manager\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserManager\"},{\"name\":\"subordinates\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserManager\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"approvals\",\"kind\":\"object\",\"type\":\"Approval\",\"relationName\":\"ApprovalToUser\"},{\"name\":\"ApprovalStep\",\"kind\":\"object\",\"type\":\"ApprovalStep\",\"relationName\":\"ApprovalStepToUser\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"approvalFlows\",\"kind\":\"object\",\"type\":\"ApprovalFlow\",\"relationName\":\"ApprovalFlowToCompany\"}],\"dbName\":null},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"convertedAmt\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExpenseStatus\"},{\"name\":\"approvals\",\"kind\":\"object\",\"type\":\"Approval\",\"relationName\":\"ApprovalToExpense\"}],\"dbName\":null},\"ApprovalFlow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"ApprovalFlowToCompany\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"steps\",\"kind\":\"object\",\"type\":\"ApprovalStep\",\"relationName\":\"ApprovalFlowToApprovalStep\"},{\"name\":\"rules\",\"kind\":\"object\",\"type\":\"ApprovalRule\",\"relationName\":\"ApprovalFlowToApprovalRule\"}],\"dbName\":null},\"ApprovalStep\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"flowId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"flow\",\"kind\":\"object\",\"type\":\"ApprovalFlow\",\"relationName\":\"ApprovalFlowToApprovalStep\"},{\"name\":\"sequence\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApprovalStepToUser\"}],\"dbName\":null},\"Approval\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ApprovalToExpense\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApprovalToUser\"},{\"name\":\"decision\",\"kind\":\"enum\",\"type\":\"ApprovalDecision\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ApprovalRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"flowId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"flow\",\"kind\":\"object\",\"type\":\"ApprovalFlow\",\"relationName\":\"ApprovalFlowToApprovalRule\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mustIncludeId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

