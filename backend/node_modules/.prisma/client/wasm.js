
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  countryCode: 'countryCode',
  currencyCode: 'currencyCode',
  createdAt: 'createdAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  fullName: 'fullName',
  role: 'role',
  companyId: 'companyId',
  managerId: 'managerId',
  createdAt: 'createdAt'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  userId: 'userId',
  amount: 'amount',
  currency: 'currency',
  amountInCompanyCurrency: 'amountInCompanyCurrency',
  category: 'category',
  description: 'description',
  dateOfExpense: 'dateOfExpense',
  receiptUrl: 'receiptUrl',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.ApprovalFlowScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  name: 'name',
  createdAt: 'createdAt'
};

exports.Prisma.ApprovalStepScalarFieldEnum = {
  id: 'id',
  flowId: 'flowId',
  approverId: 'approverId',
  sequence: 'sequence'
};

exports.Prisma.ApprovalRuleScalarFieldEnum = {
  id: 'id',
  flowId: 'flowId',
  percentage: 'percentage',
  specificRole: 'specificRole'
};

exports.Prisma.ApprovalScalarFieldEnum = {
  id: 'id',
  expenseId: 'expenseId',
  approverId: 'approverId',
  decision: 'decision',
  comment: 'comment'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  Admin: 'Admin',
  Manager: 'Manager',
  Employee: 'Employee'
};

exports.ExpenseStatus = exports.$Enums.ExpenseStatus = {
  Submitted: 'Submitted',
  Pending: 'Pending',
  Approved: 'Approved',
  Rejected: 'Rejected'
};

exports.ApprovalDecision = exports.$Enums.ApprovalDecision = {
  Pending: 'Pending',
  Approved: 'Approved',
  Rejected: 'Rejected'
};

exports.Prisma.ModelName = {
  Company: 'Company',
  User: 'User',
  Expense: 'Expense',
  ApprovalFlow: 'ApprovalFlow',
  ApprovalStep: 'ApprovalStep',
  ApprovalRule: 'ApprovalRule',
  Approval: 'Approval'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\projects\\hackathon\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\projects\\hackathon\\backend\\src\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../src/prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  Admin\n  Manager\n  Employee\n}\n\nenum ExpenseStatus {\n  Submitted\n  Pending\n  Approved\n  Rejected\n}\n\nenum ApprovalDecision {\n  Pending\n  Approved\n  Rejected\n}\n\nmodel Company {\n  id           String   @id @default(uuid())\n  name         String\n  countryCode  String?\n  currencyCode String?\n  createdAt    DateTime @default(now())\n\n  users         User[]\n  expenses      Expense[]\n  approvalFlows ApprovalFlow[]\n}\n\nmodel User {\n  id           String @id @default(uuid())\n  email        String @unique\n  passwordHash String\n  fullName     String\n  role         Role\n\n  companyId String\n  company   Company? @relation(fields: [companyId], references: [id])\n\n  managerId    String?\n  manager      User?   @relation(\"ManagerSubordinates\", fields: [managerId], references: [id])\n  subordinates User[]  @relation(\"ManagerSubordinates\")\n\n  createdAt    DateTime       @default(now())\n  expenses     Expense[]\n  ApprovalStep ApprovalStep[]\n  Approval     Approval[]\n}\n\nmodel Expense {\n  id                      String        @id @default(uuid())\n  companyId               String\n  userId                  String\n  amount                  Decimal       @db.Decimal(12, 2)\n  currency                String\n  amountInCompanyCurrency Decimal       @db.Decimal(12, 2)\n  category                String?\n  description             String?\n  dateOfExpense           DateTime\n  receiptUrl              String?\n  status                  ExpenseStatus @default(Submitted)\n  createdAt               DateTime      @default(now())\n\n  company Company @relation(fields: [companyId], references: [id])\n  user    User    @relation(fields: [userId], references: [id])\n\n  approvals Approval[]\n}\n\nmodel ApprovalFlow {\n  id        String   @id @default(uuid())\n  companyId String\n  name      String\n  createdAt DateTime @default(now())\n\n  company Company        @relation(fields: [companyId], references: [id])\n  steps   ApprovalStep[]\n  rules   ApprovalRule[]\n}\n\nmodel ApprovalStep {\n  id         String @id @default(uuid())\n  flowId     String\n  approverId String\n  sequence   Int\n\n  flow     ApprovalFlow @relation(fields: [flowId], references: [id])\n  approver User         @relation(fields: [approverId], references: [id])\n}\n\nmodel ApprovalRule {\n  id           String @id @default(uuid())\n  flowId       String @unique\n  percentage   Int?\n  specificRole Role?\n\n  flow ApprovalFlow @relation(fields: [flowId], references: [id])\n}\n\nmodel Approval {\n  id         String           @id @default(uuid())\n  expenseId  String\n  approverId String\n  decision   ApprovalDecision @default(Pending)\n  comment    String?\n\n  expense  Expense @relation(fields: [expenseId], references: [id])\n  approver User    @relation(fields: [approverId], references: [id])\n}\n",
  "inlineSchemaHash": "51a955a7cc0f87dc2037bebcd72e924dc1b1d3e626ed3f639db366fe17b1e377",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currencyCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"CompanyToExpense\"},{\"name\":\"approvalFlows\",\"kind\":\"object\",\"type\":\"ApprovalFlow\",\"relationName\":\"ApprovalFlowToCompany\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manager\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ManagerSubordinates\"},{\"name\":\"subordinates\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ManagerSubordinates\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"ApprovalStep\",\"kind\":\"object\",\"type\":\"ApprovalStep\",\"relationName\":\"ApprovalStepToUser\"},{\"name\":\"Approval\",\"kind\":\"object\",\"type\":\"Approval\",\"relationName\":\"ApprovalToUser\"}],\"dbName\":null},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountInCompanyCurrency\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfExpense\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ExpenseStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToExpense\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExpenseToUser\"},{\"name\":\"approvals\",\"kind\":\"object\",\"type\":\"Approval\",\"relationName\":\"ApprovalToExpense\"}],\"dbName\":null},\"ApprovalFlow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"ApprovalFlowToCompany\"},{\"name\":\"steps\",\"kind\":\"object\",\"type\":\"ApprovalStep\",\"relationName\":\"ApprovalFlowToApprovalStep\"},{\"name\":\"rules\",\"kind\":\"object\",\"type\":\"ApprovalRule\",\"relationName\":\"ApprovalFlowToApprovalRule\"}],\"dbName\":null},\"ApprovalStep\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sequence\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"flow\",\"kind\":\"object\",\"type\":\"ApprovalFlow\",\"relationName\":\"ApprovalFlowToApprovalStep\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApprovalStepToUser\"}],\"dbName\":null},\"ApprovalRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"percentage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specificRole\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"flow\",\"kind\":\"object\",\"type\":\"ApprovalFlow\",\"relationName\":\"ApprovalFlowToApprovalRule\"}],\"dbName\":null},\"Approval\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approverId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"decision\",\"kind\":\"enum\",\"type\":\"ApprovalDecision\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ApprovalToExpense\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ApprovalToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

